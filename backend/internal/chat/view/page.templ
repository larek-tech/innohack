package view

import (
	"github.com/larek-tech/innohack/backend/internal/chat/model"
	"github.com/larek-tech/innohack/backend/templ/layout"
)

templ ChatPage() {
	@layout.Layout("chat") {
		<body class="flex flex-col items-center bg-gray-100 min-h-screen p-4 sm:p-6 h-full">
			<h1 class="text-lg sm:text-2xl font-semibold text-gray-700 mb-2 sm:mb-4">Chat Room</h1>
			@Chat()
		</body>
	}
}

templ TestChat(response model.ResponseDto) {
	@layout.Layout("Test Chat") {
		<div class="flex h-screen">
			<div id="leftPane" class="bg-blue-100 flex-grow p-4 overflow-auto resize-x">
				@Dashboard(response)
			</div>
			<div id="divider" class="bg-gray-400 w-2 cursor-col-resize relative">
				<button id="expandRightPane" class="hidden bg-green-500 text-white p-2 rounded-full absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2">
					<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
					</svg>
				</button>
			</div>
			<div id="rightPane" class="flex-grow p-4 overflow-auto resize-x">
				@Chat()
			</div>
		</div>
		<script>
			// JavaScript for resizing panes
			const divider = document.getElementById("divider");
			const leftPane = document.getElementById("leftPane");
			const rightPane = document.getElementById("rightPane");
			const expandRightPane = document.getElementById("expandRightPane");

			divider.addEventListener("mousedown", (e) => {
				e.preventDefault();
				document.addEventListener("mousemove", resize);
				document.addEventListener("mouseup", stopResize);
			});

			function resize(e) {
				const totalWidth = leftPane.offsetWidth + rightPane.offsetWidth + divider.offsetWidth;
				const leftWidth = (e.clientX / window.innerWidth) * 100;
				leftPane.style.width = `${leftWidth}%`;
				rightPane.style.width = `${100 - leftWidth}%`;

				if (rightPane.offsetWidth < 400) {
					rightPane.style.display = "none";
					expandRightPane.classList.remove("hidden");
				} else {
					rightPane.style.display = "block";
					expandRightPane.classList.add("hidden");
				}
			}

			function stopResize() {
				document.removeEventListener("mousemove", resize);
				document.removeEventListener("mouseup", stopResize);
			}

			expandRightPane.addEventListener("click", () => {
				rightPane.style.display = "block";
				rightPane.style.width = "400px";
				leftPane.style.width = `calc(100% - 400px)`;
				expandRightPane.classList.add("hidden");
			});
		</script>
	}
}
